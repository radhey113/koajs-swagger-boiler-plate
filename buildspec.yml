version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region $AWS_REGION | sed -e 's/-e none//g')
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest -f ./Dockerfile .
      - docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
      - case $CODEBUILD_INITIATOR in *production*) export DOCKER_HOST=master.swarm-production.ed-space.net:2376;; *staging*) DOCKER_HOST=master.swarm-staging.ed-space.net:2376;; esac
      - echo Docker host is $DOCKER_HOST
      - if [ ! -z "$DOCKER_HOST" ]; then for i in `docker service ls --filter label=service.name=notf --format "{{.Name}}"`; do docker service update --with-registry-auth --update-order=start-first --update-failure-action=rollback --detach=false --image $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG $i; done; else echo "Docker host is not set, won't update anything!"; fi
